{"version":3,"file":"main.3c71fa2b7ff5d21a1715.hot-update.js","mappings":";;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;;;;;;;;;;;;;;;;;;ACFA;AACA;AAOA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAZA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://production/./config/storybook/preview.ts","webpack://production/./src/app/providers/ThemeProvider/index.ts","webpack://production/./src/app/providers/ThemeProvider/lib/useTheme.ts","webpack://production/./src/app/providers/ThemeProvider/ui/ThemeProvider.tsx","webpack://production/./src/shared/config/storybook/ThemeDecorator.tsx","webpack://production/./src/ lazy ^\\.\\/.*$ include: ("],"sourcesContent":["import type { Preview } from '@storybook/react';\nimport { Theme } from '../../src/app/providers/ThemeProvider/lib/ThemeContext';\nimport { ThemeDecorator } from '../../src/shared/config/storybook/ThemeDecorator';\nimport { StyleDecorator } from '../../src/shared/config/storybook/StyleDecorator';\n\nconst preview: Preview = {\n    parameters: {\n        actions: { argTypesRegex: '^on[A-Z].*' },\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/,\n            },\n        },\n        decorators: [\n            StyleDecorator,\n            ThemeDecorator(Theme.DARK),\n        ],\n    },\n};\n\nexport default preview;\n","import { Theme } from './lib/ThemeContext';\r\nimport { useTheme } from './lib/useTheme';\r\nimport ThemeProvider from './ui/ThemeProvider';\r\n\r\nexport { ThemeProvider, Theme, useTheme };\r\n","import React from 'react';\r\nimport { LOCAL_STORAGE_THEME_KEY, Theme, ThemeContext } from './ThemeContext';\r\n\r\nexport interface useThemeResult {\r\n  theme: Theme;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const useTheme = (): useThemeResult => {\r\n    const { theme, setTheme } = React.useContext(ThemeContext);\r\n\r\n    const toggleTheme = () => {\r\n        const newTheme = theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT;\r\n        setTheme(newTheme);\r\n        localStorage.setItem(LOCAL_STORAGE_THEME_KEY, newTheme);\r\n    };\r\n\r\n    return { theme, toggleTheme };\r\n};\r\n","import React, { FC } from 'react';\r\nimport { LOCAL_STORAGE_THEME_KEY, Theme, ThemeContext } from '../lib/ThemeContext';\r\n\r\nconst defaultTheme = (localStorage.getItem(LOCAL_STORAGE_THEME_KEY) as Theme) || Theme.LIGHT;\r\n\r\nconst ThemeProvider: FC = ({ children }) => {\r\n    const [theme, setTheme] = React.useState<Theme>(defaultTheme);\r\n\r\n    const defaultProps = React.useMemo(\r\n        () => ({\r\n            theme,\r\n            setTheme,\r\n        }),\r\n        [theme],\r\n    );\r\n\r\n    return <ThemeContext.Provider value={defaultProps}>{children}</ThemeContext.Provider>;\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import { StoryFn } from '@storybook/react';\r\nimport { Theme, ThemeProvider } from 'app/providers/ThemeProvider';\r\n\r\nexport const ThemeDecorator = (theme: Theme) => (Story: StoryFn) => {\r\n    <div className={`app ${theme}`}>\r\n        <ThemeProvider>\r\n            \r\n        </ThemeProvider>\r\n        <Story />\r\n    </div>;\r\n};\r\n","var map = {\n\t\"./shared/ui/Button/Button.stories\": [\n\t\t\"./src/shared/ui/Button/Button.stories.tsx\",\n\t\t\"shared-ui-Button-Button-stories\"\n\t],\n\t\"./shared/ui/Button/Button.stories.\": [\n\t\t\"./src/shared/ui/Button/Button.stories.tsx\",\n\t\t\"shared-ui-Button-Button-stories\"\n\t],\n\t\"./shared/ui/Button/Button.stories.tsx\": [\n\t\t\"./src/shared/ui/Button/Button.stories.tsx\",\n\t\t\"shared-ui-Button-Button-stories\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src lazy recursive ^\\\\.\\\\/.*$ include: (?:[\\\\\\\\/]src(?:[\\\\\\\\/](?%21\\\\.)(?:(?:(?%21(?:^%7C[\\\\\\\\/])\\\\.).)*?)[\\\\\\\\/]%7C[\\\\\\\\/]%7C$)(?%21\\\\.)(?=.)[^\\\\\\\\/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";\nmodule.exports = webpackAsyncContext;"],"names":[],"sourceRoot":""}